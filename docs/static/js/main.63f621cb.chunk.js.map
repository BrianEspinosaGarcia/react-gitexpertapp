{"version":3,"sources":["Components/AddCategory.js","Components/GifGridItem.js","helpers/getGifs.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorieNew","useState","cat","setCat","className","onSubmit","e","preventDefault","trim","length","past","type","placeholder","value","onChange","target","GifGridItem","id","title","url","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","gif","key","GifExpertApp","categories","setCategories","categoria","ReactDOM","render","document","getElementById"],"mappings":";4MAqCeA,EAlCK,SAAC,GAA2B,IAAxBC,EAAuB,EAAvBA,gBAAuB,EAErBC,mBAAS,IAFY,mBAEpCC,EAFoC,KAE/BC,EAF+B,KAiB3C,OACI,qBAAKC,UAAU,kBAAf,SACG,uBAAMC,SAZQ,SAAEC,GACnBA,EAAEC,iBAEEL,EAAIM,OAAOC,OAAS,IACpBT,GAAiB,SAAAU,GAAI,OAAMR,GAAN,mBAAaQ,OAClCP,EAAO,MAOR,UACK,oBAAIC,UAAU,+DAAd,0BACA,uBACQO,KAAK,OACLC,YAAY,gDACZC,MAAQX,EACRY,SArBF,SAAER,GAChBH,EAAQG,EAAES,OAAOF,gB,OCNZG,EAAc,SAAC,GAAwB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACtC,OACI,sBAAKf,UAAU,0DAAf,UACI,qBAAKgB,IAAMD,EAAME,IAAMH,IACtB,qBAAId,UAAU,yDAAd,cAA0Ec,EAA1E,W,uBCHAI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbL,EADa,iDACoCM,UAAYF,GADhD,8DAEAG,MAAOP,GAFP,cAEbQ,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHf,GAAIe,EAAIf,GACRC,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIC,cAAN,aAAE,EAAYC,iBAAiBf,QATvB,kBAaZW,GAbY,4CAAH,sDCEPK,EAAU,SAAC,GAAoB,IAAjBZ,EAAgB,EAAhBA,SAAgB,ECFf,SAAEA,GAAe,IAAD,EACdtB,mBAAU,CAChC4B,KAAM,GACNO,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAmBzC,OAdCC,qBAAW,WACPjB,EAASC,GACAiB,MAAM,SAAAC,GACHC,YAAY,WACRC,QAAQC,IAAIH,GACZH,EAAU,CACNT,KAAMY,EACNL,SAAS,MAEd,UAGjB,CAAEb,IAEEc,EDdoBQ,CAActB,GAAhCM,EAH+B,EAG/BA,KAAMO,EAHyB,EAGzBA,QAKd,OACI,qCACI,mCAAOb,EAAP,OACEa,GAAW,gDAFjB,IAE0C,uBAF1C,KAEiD,uBAFjD,KAEwD,uBACpD,qBAAKhC,UAAU,YAAf,SACUyB,EAAKE,KAAK,SAAAe,GAAG,OACX,wBAAC,EAAD,2BAAkBA,GAAlB,IACYC,IAAMD,EAAI7B,eEoB/B+B,EApCM,WAAO,IAAD,EAGc/C,mBAAU,CAAC,cAHzB,mBAGfgD,EAHe,KAGHC,EAHG,KAWvB,OACI,qCACI,oBAAI9C,UAAU,6DAAd,0BAEI,cAAC,EAAD,CAAaJ,gBAAkBkD,IAC/B,uBAEJ,6BACMD,EAAWlB,KAAK,SAAAoB,GAAS,OACvB,cAAC,EAAD,CACY5B,SAAW4B,GACNA,YCpBrCC,IAASC,OAAQ,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.63f621cb.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ( { setCategorieNew } ) => {\n\n    const [cat, setCat] = useState(\"\");\n\n    const addNewCat = ( e ) => {\n        setCat( e.target.value )\n    }\n    const handleSubmit = ( e ) => {\n        e.preventDefault();\n\n        if( cat.trim().length > 2){\n            setCategorieNew( past => [ cat,...past ]);\n            setCat(\"\");        \n        }\n        \n    }\n\n    return (\n        <div className=\"containerAddCat\">\n           <form onSubmit={ handleSubmit }>     \n                <h1 className=\"card animate__animated animate__zoomInDown animate__delay-2s\">Add Category</h1>\n                <input \n                        type=\"text\"  \n                        placeholder=\"Escribe aqui la categoria que quieres agregar\"\n                        value= {cat}\n                        onChange={ addNewCat }\n                /> \n            </form>\n        </div>\n    )\n}\nAddCategory.propTypes = {\n    setCategorieNew : PropTypes.func.isRequired\n}\nexport default AddCategory;","import React from 'react'\n\nexport const GifGridItem = ( { id, title, url} ) => {\n    return (\n        <div className=\"card animate__animated animate__jello animate__delay-2s\">\n            <img src={ url } alt={ title }></img>\n             <h3 className=\"card animate__animated animate__flip animate__delay-2s\"> { title } </h3>\n        </div>\n    )\n}\n","\n\n\nexport const getGifs = async( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI ( category ) }&limit=5&api_key=IcLgRD12PBcHGRuTU24p59FPmHQkPC1z`;\n    const resp = await fetch( url );\n    const {data} = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n\n        }\n    });\n    return gifs;\n}","import React from 'react'\nimport {GifGridItem} from './GifGridItem';\n\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ( { category } ) => {\n\n    \n    const { data, loading } = useFetchGifs( category );\n\n\n   //! Importante notar que aqui se esta desestructurando en una prop del componente desde antes para poder tomar del otro lado los valores de esa \n    //! desestructuracion\n    return (\n        <>\n            <h3> { category } </h3>\n            { loading && <h1>'Cargando ...'</h1>} <br/>  <br/>  <br/>\n            <div className=\"card-grid\">\n                    { data.map( gif => \n                        <GifGridItem { ...gif }  \n                                    key={ gif.id } \n                        />)\n                    }\n                \n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n    const [state, setState] = useState( {\n        data: [],\n        loading: true\n    });\n    useEffect( () => {\n        getGifs( category )\n                .then( imgs => {\n                    setTimeout( () => {\n                        console.log(imgs)\n                        setState( {\n                            data: imgs,\n                            loading: false\n                        })\n                    }, 500);\n                    \n                })\n   }, [ category ])\n    \n   return state;\n}","import React, { useState } from 'react';\nimport AddCategory from './Components/AddCategory';\nimport {GifGrid} from './Components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    \n    const [ categories, setCategories] = useState( ['One Punch'] );\n\n    /* const addCat = () => {\n        //setCategories(  [...categories, categorie ] );\n        setCategories( estadoPasado =>  [...estadoPasado, \"provisional\" ] );\n    } */\n   \n\n    return (\n        <> \n            <h2 className=\"card animate__animated animate__zoomInUp animate__delay-2s\">GifExpertApp</h2>\n\n                <AddCategory setCategorieNew={ setCategories } />\n                <hr />\n            \n            <ol>\n                { categories.map( categoria => \n                    <GifGrid \n                                category={ categoria } \n                                key={categoria}\n                    />\n                )}\n            </ol>\n\n\n\n        </>\n\n    );\n\n}\n\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render( <GifExpertApp />, document.getElementById('root') );\n\n\n"],"sourceRoot":""}